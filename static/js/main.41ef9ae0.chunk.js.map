{"version":3,"sources":["environment/environment.js","components/CurrentLocation.js","assets/MapStyles.js","components/Marker.js","views/Map.js","components/Header.js","components/CircularIndeterminate.js","App.js","serviceWorker.js","index.js"],"names":["environment","dbBaseUrl","dbContract","dbApiKey","google_maps_api_key","useStyles","makeStyles","theme","root","display","width","height","borderRadius","cursor","boxShadow","animation","& svg","margin","color","primary","&hover","CurrentLocation","classes","react_default","a","createElement","className","MyLocation_default","MapStyles","styles","elementType","stylers","visibility","featureType","withStyles","background","palette","secondary","main800","lineHeight","textAlign","fontSize","active","main","Marker","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","props","viewStation","station","_this$props","number","concat","onClick","Component","Map","googleMapsApiKey","updateStation","state","stations","setState","val","_this2","center","zoom","mapType","lib_default","bootstrapURLKeys","key","options","defaultZoom","components_CurrentLocation","lat","lng","map","i","components_Marker","available_bikes","available_bike_stands","position","minHeight","zIndex","top","title","flexGrow","toolbar","toggle","&.Mui-selected","&:hover","main700","Header","_ref","currentStation","setName","children","ToggleButton","value","DirectionsBike_default","LocalParking_default","AppBar","Toolbar","Typography","variant","name","NearMe_default","distance","ToggleButtonGroup","size","exclusive","onChange","CircularProgress","progress","createMuiTheme","typography","useNextVariants","main50","main100","main200","main300","main400","main500","main600","App","getStations","handleName","type","getGeolocation","setInterval","_this3","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","watchGeoLocation","_this4","watchPosition","setActiveStation","s","fetch","response","json","result","appendDistance","getClosest","_this5","item","toFixed","sort","b","lat1","lon1","lat2","lon2","unit","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","e","_this6","length","MuiThemeProvider","react_router_dom","basename","process","id","react_router","path","render","views_Map","assign","style","justifyContent","components_CircularIndeterminate","Boolean","window","location","hostname","match","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41ef9ae0.chunk.js","sourcesContent":["export const environment = {\n  dbBaseUrl: 'https://api.jcdecaux.com/vls/v1/',\n  dbContract: 'Dublin',\n  dbApiKey: 'bbbdbe0c576a57bd979453af7228f03a88759b13',\n  google_maps_api_key: 'AIzaSyATI7fhyrRNch0Bu_xvVzAPsaJrDUZs73g'\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: 'block',\n\t\twidth: '15px',\n\t\theight: '15px',\n\t\tborderRadius: '50%',\n\t\tcursor: 'pointer',\n\t\tboxShadow: '0 0 0 rgba(100, 255, 218, 0.4)',\n\t\tanimation: 'pulse 2s infinite',\n\t\t'& svg': {\n\t\t\tmargin: '-4px',\n\t\t\tcolor: theme.primary\n\t\t},\n\t\t'&hover': {\n\t\t\tanimation: 'none'\n\t\t}\n\t}\n}));\n\nconst CurrentLocation = () => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div className={classes.root}><MyLocationIcon color=\"secondary\"/></div>\n\t)\n}\n\nexport default CurrentLocation;","const MapStyles = {\n    styles: [\n        {\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#000\"\n            }\n          ]\n        },\n        {\n          \"elementType\": \"labels.icon\",\n          \"stylers\": [\n            {\n              \"visibility\": \"off\"\n            }\n          ]\n        },\n        {\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#616161\"\n            }\n          ]\n        },\n        {\n          \"elementType\": \"labels.text.stroke\",\n          \"stylers\": [\n            {\n              \"color\": \"#f5f5f5\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"administrative.land_parcel\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#bdbdbd\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"poi\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#eeeeee\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"poi\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#757575\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"poi.park\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#e5e5e5\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"poi.park\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#9e9e9e\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#ffffff\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road.arterial\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#757575\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#dadada\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#616161\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road.local\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#9e9e9e\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"transit.line\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#e5e5e5\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"transit.station\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#eeeeee\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"water\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#757575\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"water\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#ffffff\"\n            }\n          ]\n        }\n      ]\n  };\n  export default MapStyles;","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = withStyles(theme => ({\n  root: {\n    display: 'block',\n    width: '28px',\n    height: '28px',\n    background: theme.palette.secondary.main800,\n    color: 'white',\n    borderRadius: '28px',\n    lineHeight: '28px',\n    textAlign: 'center',\n    margin: '-10px 0 0 -10px',\n    fontSize: '14px'\n  },\n  active: {\n    background: theme.palette.primary.main,\n    color: 'black'\n  }\n}));\n\nclass Marker extends Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.active = true;\n    return this.props.viewStation(this.props.station)\n  }\n  render() {\n    const { classes, station, number } = this.props;\n    return (\n      <div className={`${classes.root} ${station.active ? classes.active : ''}`} onClick={ this.handleClick }>{number}</div>\n    )\n  }\n}\n\nexport default useStyles(Marker);","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport { environment } from '../environment/environment';\nimport CurrentLocation from '../components/CurrentLocation';\nimport MapStyles from '../assets/MapStyles';  \nimport Marker from '../components/Marker';\n\nclass Map extends Component {\n  constructor(props) {\n    super(props)\n    this.googleMapsApiKey = environment.google_maps_api_key;\n    this.updateStation = this.updateStation.bind(this)\n    this.state = { \n      station: 'station',\n      stations: []\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ station: this.state.stations[0] })\n  }\n\n  updateStation(val) {\n    this.setState({ station: val })\n    this.props.updateStation(val);\n  }\n\n  render() {\n    const { center, zoom, stations, mapType } = this.props;\n    return (\n      <div>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: this.googleMapsApiKey }}\n          center={ center }\n          options={ MapStyles }\n          defaultZoom={ zoom }>\n          <CurrentLocation\n            lat={ center.lat }\n            lng={ center.lng } />\n          { stations.map((station, i) =>\n            <Marker\n              key={ i }\n              number={ mapType === 'bike' ? station.available_bikes : station.available_bike_stands }\n              viewStation={ this.updateStation }\n              lat={ station.position.lat }\n              lng={ station.position.lng }\n              station={ station } />\n          )}\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default Map;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\nimport NearMeIcon from '@material-ui/icons/NearMe';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '64px',\n    position: 'fixed',\n    zIndex: 5,\n    width: '100%',\n    top: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    minHeight: '64px',\n  },\n  toggle: {\n    background: theme.palette.secondary.main800,\n      '&.Mui-selected': {\n        background: theme.palette.primary.main,\n      '&:hover': {\n        background: theme.palette.primary.main,\n      }\n    },\n    '&:hover': {\n      background: theme.palette.secondary.main700\n    }\n  }\n}));\n\nexport default ({ currentStation, mapType, setName }) => {\n  const classes = useStyles();\n\n  const children = [\n    <ToggleButton className={classes.toggle} key={1} value=\"bike\">\n      <DirectionsBikeIcon />\n    </ToggleButton>,\n    <ToggleButton className={classes.toggle} key={2} value=\"park\">\n      <LocalParkingIcon />\n    </ToggleButton>,\n  ];\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\" className={classes.title}>\n            { currentStation.name } <NearMeIcon />{currentStation.distance}km\n          </Typography>\n          <ToggleButtonGroup size=\"small\" value={mapType} exclusive onChange={setName}>\n                {children}\n              </ToggleButtonGroup>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  // progress: {\n  //   margin: theme.spacing.unit * 2\n  // },\n});\n\nfunction CircularIndeterminate(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <CircularProgress className={classes.progress} color=\"secondary\" />\n    </div>\n  );\n}\n\nCircularIndeterminate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route  } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './App.css';\n\nimport { environment } from './environment/environment';\nimport Map from './views/Map';\nimport Header from './components/Header';\nimport CircularIndeterminate from './components/CircularIndeterminate';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      main: '#64ffda',\n    },\n    secondary: {\n      main: '#212121',\n      main50: '#fafafa',\n      main100: '#f5f5f5',\n      main200: '#eeeeee',\n      main300: '#e0e0e0',\n      main400: '#bdbdbd',\n      main500: '#9e9e9e',\n      main600: '#757575',\n      main700: '#616161',\n      main800: '#424242'\n    },\n  },\n});\nclass App extends Component {\n  \n\n  constructor(){\n    super();\n    this.getStations = this.getStations.bind(this)\n    this.handleName = this.handleName.bind(this)\n    this.updateStation = this.updateStation.bind(this)\n    this.state = {\n      center: { }, \n      zoom: 16,\n      stations: [],\n      station: '',\n      type: 'bike' // Add Pre-screen to decide this state\n    }\n  }\n  \n\n  componentDidMount() {\n    this.getGeolocation();\n    // Refresh every 60 seconds\n    setInterval(() => {\n      this.getStations(this.state.center.lat, this.state.center.lng)\n    }, 60000)\n  }\n\n  getGeolocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => {\n        this.setState({\n          center: {\n            lat: pos.coords.latitude,\n            lng: pos.coords.longitude\n          }\n        }, () => this.getStations(this.state.center.lat, this.state.center.lng));\n      });\n      this.watchGeoLocation();\n    } else {\n      // Set 'center' to city center\n      this.setState({\n        center: {\n          lat: 53.347316, lng: -6.259184\n        }\n      }, () => this.getStations(this.state.center.lat, this.state.center.lng));\n      \n    }\n  }\n\n  watchGeoLocation() {\n    navigator.geolocation.watchPosition(pos => {\n      this.setState({\n        center: {\n          lat: pos.coords.latitude,\n          lng: pos.coords.longitude\n        }\n      });\n    })\n  }\n\n  updateStation(val) {\n    const setActiveStation = this.state.stations.map(s => (val.number === s.number) ? (s.active = true, s) : (s.active = false, s))\n    this.setState({ \n      station: val,\n      stations: setActiveStation\n    })\n  }\n\n  async getStations(lat, lng) {\n    const { dbBaseUrl, dbContract, dbApiKey} = environment;\n    const response = await fetch(`${dbBaseUrl}stations?contract=${dbContract}&apiKey=${dbApiKey}`)\n    const json = await response.json();\n    const result = this.appendDistance(json, lat, lng);\n    this.setState({ stations: this.getClosest(result) });\n  }\n\n  appendDistance(response, lat, lng) {\n    const result = response.map(item => {\n      item.distance = this.distance(lat,lng, item.position.lat, item.position.lng, 'K').toFixed(2);\n      return item;\n    })\n    return result;\n  }\n\n  getClosest(stations) {\n    const result = stations.sort((a,b) => (a.distance > b.distance) ? 1 : ((b.distance > a.distance) ? -1 : 0));\n    result[0].active = true;\n    this.setState({ station: result[0] } )\n    return result;\n  }\n\n  distance(lat1, lon1, lat2, lon2, unit) {\n    if ((lat1 === lat2) && (lon1 === lon2)) {\n      return 0;\n    }\n    else {\n      var radlat1 = Math.PI * lat1/180;\n      var radlat2 = Math.PI * lat2/180;\n      var theta = lon1-lon2;\n      var radtheta = Math.PI * theta/180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      if (dist > 1) {\n        dist = 1;\n      }\n      dist = Math.acos(dist);\n      dist = dist * 180/Math.PI;\n      dist = dist * 60 * 1.1515;\n      if (unit===\"K\") { dist = dist * 1.609344 }\n      if (unit===\"N\") { dist = dist * 0.8684 }\n      return dist;\n    }\n  }\n  \n  handleName(e, a) {\n    return this.state.type !== a && a !== null && this.setState({ type: a });\n  }\n  \n  render() {\n    if (this.state.stations.length) {\n      return (\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <div id=\"wrapper\">\n          <Header \n            currentStation={ this.state.station }\n            mapType={this.state.type}\n            setName={this.handleName} />\n          <div className='main'>\n            <Route\n              path=\"/\"\n              render={(props) => <Map {...props}\n                mapType={ this.state.type }\n                updateStation={ this.updateStation }\n                stations={ this.state.stations }\n                center={ this.state.center }\n                zoom={ this.state.zoom }\n              />} />\n              </div>\n          </div>\n        </BrowserRouter>   \n        </MuiThemeProvider>\n      );\n    } else {\n      return (\n      <MuiThemeProvider theme={theme}>\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          <CircularIndeterminate></CircularIndeterminate>\n        </div>\n      </MuiThemeProvider>\n      )\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {  } from 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport { render } from \"react-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n// import './assets/material-kit.css';\n\nrender(<App />, document.getElementById(\"root\"));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}