{"version":3,"sources":["environment/environment.js","views/Recent.js","components/CurrentLocation.js","components/CurrentStation.js","assets/MapStyles.js","components/Marker.js","views/Map.js","components/StationDetails.js","components/StationList.js","views/Nearest.js","components/BottomNav.js","components/CircularIndeterminate.js","App.js","serviceWorker.js","index.js"],"names":["environment","dbBaseUrl","dbContract","dbApiKey","google_maps_api_key","Recent","react_default","a","createElement","CurrentLocation","className","MyLocation_default","CurrentStation","_ref","classes","station","root","NearMe_default","svg","address","distance","protoTypes","PropTypes","object","isRequired","withStyles","position","zIndex","background","width","top","left","padding","borderRadius","boxShadow","fontSize","MapStyles","styles","featureType","elementType","stylers","saturation","color","lightness","visibility","weight","Marker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","viewStation","onClick","Component","theme","display","height","Map","googleMapsApiKey","updateStation","state","stations","setState","val","_this2","_this$props","center","zoom","style","components_CurrentStation","lib_default","bootstrapURLKeys","key","options","defaultZoom","components_CurrentLocation","lat","lng","map","i","components_Marker","flexGrow","marginBottom","spacing","unit","paper","margin","maxWidth","backgroundColor","image","img","maxHeight","text","stationDetails","Paper_default","Grid_default","container","item","xs","sm","direction","Typography_default","gutterBottom","variant","Badge_default","badgeContent","available_bike_stands","LocalParking_default","available_bikes","DirectionsBike_default","StationList","components_StationDetails","Nearest","components_StationList","_root","defineProperty","BottomNav","value","handleChange","event","_React$createElement","_React$createElement2","_React$createElement3","BottomNavigation_default","onChange","showLabels","BottomNavigationAction_default","component","Link","to","label","Restore_default","PersonPinCircle_default","React","progress","CircularProgress_default","createMuiTheme","palette","primary","main","secondary","App","getStations","getGeolocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","fetch","concat","response","json","result","appendDistance","getClosest","_this3","toFixed","sort","b","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","_this4","length","BrowserRouter","Route","exact","path","render","views_Recent","views_Map","assign","views_Nearest","components_BottomNav","justifyContent","components_CircularIndeterminate","Boolean","window","location","hostname","match","target","document","querySelector","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.50ead428.chunk.js","sourcesContent":["export const environment = {\n  dbBaseUrl: 'https://api.jcdecaux.com/vls/v1/',\n  dbContract: 'Dublin',\n  dbApiKey: 'bbbdbe0c576a57bd979453af7228f03a88759b13',\n  google_maps_api_key: 'AIzaSyAveGIhntsi_rM377-o6ILDazuE3NRgrBc'\n};","import React from 'react';\n\nconst Recent = () => <h1>Recent</h1>\n\nexport default Recent;","import React from 'react';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\n\nconst CurrentLocation = () => <div className=\"currentLocation\"><MyLocationIcon /></div>\n\nexport default CurrentLocation;","import React from 'react';\nimport NearMeIcon from '@material-ui/icons/NearMe';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = () => ({\n  root: {\n    position: 'absolute',\n    zIndex: 2,\n    background: '#fff',\n    width: '80%',\n    top: '10px',\n    left: '10px',\n    padding: '8px 14px',\n    borderRadius: '2px',\n    boxShadow: 'rgba(0, 0, 0, 0.3) 0px 1px 4px -1px'\n  },\n  svg: {\n    fontSize: '21px'\n  }\n})\nconst CurrentStation = ({ classes, station }) =>\n  <div className={classes.root}>\n    <NearMeIcon className={classes.svg}/> { station.address } - { station.distance } km\n  </div>\n\nCurrentStation.protoTypes = {\n  classes: PropTypes.object.isRequired\n}\nexport default withStyles(styles)(CurrentStation);","const MapStyles = {\n    styles: [\n      {\n          \"featureType\": \"all\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n              {\n                  \"saturation\": 36\n              },\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 40\n              }\n          ]\n      },\n      {\n          \"featureType\": \"all\",\n          \"elementType\": \"labels.text.stroke\",\n          \"stylers\": [\n              {\n                  \"visibility\": \"on\"\n              },\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 16\n              }\n          ]\n      },\n      {\n          \"featureType\": \"all\",\n          \"elementType\": \"labels.icon\",\n          \"stylers\": [\n              {\n                  \"visibility\": \"off\"\n              }\n          ]\n      },\n      {\n          \"featureType\": \"administrative\",\n          \"elementType\": \"geometry.fill\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 20\n              }\n          ]\n      },\n      {\n          \"featureType\": \"administrative\",\n          \"elementType\": \"geometry.stroke\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 17\n              },\n              {\n                  \"weight\": 1.2\n              }\n          ]\n      },\n      {\n          \"featureType\": \"landscape\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 20\n              }\n          ]\n      },\n      {\n          \"featureType\": \"poi\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 21\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"geometry.fill\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 17\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"geometry.stroke\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 29\n              },\n              {\n                  \"weight\": 0.2\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.arterial\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 18\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.local\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 16\n              }\n          ]\n      },\n      {\n          \"featureType\": \"transit\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 19\n              }\n          ]\n      },\n      {\n          \"featureType\": \"water\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#212121\"\n              },\n              {\n                  \"lightness\": 17\n              }\n          ]\n      }\n  ]\n  };\n  export default MapStyles;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    display: 'block',\n    width: '20px',\n    height: '20px',\n    background: '#64ffda',\n    borderRadius: '20px'\n  }\n})\nclass Marker extends Component {\n\n  constructor(props) {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    return this.props.viewStation(this.props.station)\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root} onClick={ this.handleClick }></div>\n    )\n  }\n}\n\nMarker.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Marker);","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport { environment } from '../environment/environment';\nimport CurrentLocation from '../components/CurrentLocation';\nimport CurrentStation from '../components/CurrentStation';  \nimport MapStyles from '../assets/MapStyles';  \nimport Marker from '../components/Marker';\n\nclass Map extends Component {\n  constructor(props) {\n    super(props)\n    this.googleMapsApiKey = environment.google_maps_api_key;\n    this.updateStation = this.updateStation.bind(this)\n    this.state = { \n      station: 'station',\n      stations: []\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ station: this.state.stations[0] })\n  }\n\n  updateStation(val) {\n    this.setState({ station: val })\n  }\n\n  render() {\n    const { center, zoom, stations } = this.props;\n    return (\n      <div style={{ height: '94vh', width: '100%' }}>\n        <CurrentStation station={ this.state.station ? this.state.station : stations[0] } />\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: this.googleMapsApiKey }}\n          center={ center }\n          options={ MapStyles }\n          defaultZoom={ zoom }>\n          <CurrentLocation\n            lat={ center.lat }\n            lng={ center.lng } />\n          { stations.map((station, i) =>\n            <Marker\n              key={ i }\n              viewStation={ this.updateStation }\n              lat={ station.position.lat }\n              lng={ station.position.lng }\n              station={ station } />\n          )}\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default Map;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing.unit * 2\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    margin: 'auto',\n    maxWidth: 500,\n    backgroundColor: '#424242',\n    color: '#fff'\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  text: {\n    color: '#fff'\n  }\n});\n\nfunction StationDetails(props) {\n  const { classes, stationDetails } = props;\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container>\n          <Grid item>\n            {/* <ButtonBase className={classes.image}>\n              <img className={classes.img} alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n            </ButtonBase> */}\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={16}>\n              <Grid item xs>\n                <Typography gutterBottom className={classes.text} variant=\"h6\">{ stationDetails.address }</Typography>\n                <Badge className={classes.margin} badgeContent={stationDetails.available_bike_stands} color=\"primary\">\n                  <LocalParkingIcon />\n                </Badge>\n                <Badge className={classes.margin} badgeContent={stationDetails.available_bikes} color=\"secondary\">\n                  <DirectionsBikeIcon />\n                </Badge>\n                {/* <Typography gutterBottom>{ stationDetails.last_update}</Typography> */}\n                {/* <Typography color=\"textSecondary\">BIKES: { stationDetails.available_bikes } | SPACES: { stationDetails.available_bike_stands }</Typography> */}\n              </Grid>\n              {/* <Grid item>\n                <Typography style={{ cursor: 'pointer' }}>Show on map</Typography>\n              </Grid> */}\n            </Grid>\n\n            <Grid item>\n              <Typography className={classes.text} variant=\"h6\">{ stationDetails.distance } km</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n\nStationDetails.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StationDetails);\n","import React from 'react';\n\nimport StationDetails from '../components/StationDetails';\n\nconst StationList = ({ stations }) => \n  ( stations.map((station, i) =>\n    <StationDetails\n      key={ i }\n      stationDetails={ station } />)\n  )\n\n\nexport default StationList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport StationList from '../components/StationList';\n\nconst styles = () => ({\n  root: {\n    backgroundColor: '#212121',\n    padding: '15px'\n  }\n})\nconst Nearest = ({ classes, stations }) => <div className={classes.root}><StationList stations={stations} /></div>\n\nNearest.protoTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Nearest);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\nimport NearMeIcon from '@material-ui/icons/NearMe';\n\nconst styles = {\n  root: {\n    width: 500,\n    width: '100%',\n    position: 'fixed',\n    bottom: 0,\n    zIndex: 1,\n    boxShadow: 'rgba(0, 0, 0, 0.3) 0px -1px 4px -1px'\n  },\n};\n\nclass BottomNav extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n      <BottomNavigation\n        value={value}\n        onChange={this.handleChange}\n        showLabels\n        className={classes.root}>\n        <BottomNavigationAction component={Link}\n          to=\"/\"\n          label=\"Recent\"\n          value=\"Recent\"\n          label=\"Recent\"\n          icon={<RestoreIcon />} />\n        <BottomNavigationAction component={Link}\n          to=\"/map\"\n          label=\"map\"\n          value=\"map\"\n          label=\"Map\"\n          icon={<PersonPinCircleIcon />} />\n        \n        <BottomNavigationAction component={Link}\n          to=\"/nearest\"\n          label=\"nearest\"\n          value=\"nearest\"\n          label=\"Near by\"\n          icon={<NearMeIcon />} />\n      </BottomNavigation>\n    );\n  }\n}\n\nBottomNav.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(BottomNav);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 2\n  },\n});\n\nfunction CircularIndeterminate(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <CircularProgress className={classes.progress} color=\"secondary\" />\n    </div>\n  );\n}\n\nCircularIndeterminate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route  } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './App.css';\n\nimport { environment } from './environment/environment';\nimport Recent from './views/Recent';\nimport Map from './views/Map';\nimport Nearest from './views/Nearest';\nimport BottomNav from './components/BottomNav';\nimport CircularIndeterminate from './components/CircularIndeterminate';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#64ffda',\n    },\n    secondary: {\n      main: '#263238',\n    },\n  },\n});\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.getStations = this.getStations.bind(this)\n    this.state = {\n      center: { }, \n      zoom: 16,\n      stations: []\n    }\n  }\n\n  componentDidMount() {\n    this.getGeolocation();\n  }\n\n  getGeolocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => {\n        this.getStations(\n          pos.coords.latitude,\n          pos.coords.longitude\n        )\n        this.setState({\n          center: {\n            lat: pos.coords.latitude,\n            lng: pos.coords.longitude\n          }\n        });\n      });\n    }\n  }\n\n  async getStations(lat, lng) {\n    const { dbBaseUrl, dbContract, dbApiKey} = environment;\n    const response = await fetch(`${dbBaseUrl}stations?contract=${dbContract}&apiKey=${dbApiKey}`)\n    const json = await response.json();\n    const result = this.appendDistance(json, lat, lng);\n    this.setState({ stations: this.getClosest(result) });\n  }\n\n  appendDistance(response, lat, lng) {\n    const result = response.map(item => {\n      item.distance = this.distance(lat,lng, item.position.lat, item.position.lng, 'K').toFixed(2);\n      return item;\n    })\n    return result;\n  }\n\n  getClosest(stations) {\n    return stations.sort((a,b) => (a.distance > b.distance) ? 1 : ((b.distance > a.distance) ? -1 : 0))\n  }\n\n  distance(lat1, lon1, lat2, lon2, unit) {\n    if ((lat1 === lat2) && (lon1 === lon2)) {\n      return 0;\n    }\n    else {\n      var radlat1 = Math.PI * lat1/180;\n      var radlat2 = Math.PI * lat2/180;\n      var theta = lon1-lon2;\n      var radtheta = Math.PI * theta/180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      if (dist > 1) {\n        dist = 1;\n      }\n      dist = Math.acos(dist);\n      dist = dist * 180/Math.PI;\n      dist = dist * 60 * 1.1515;\n      if (unit===\"K\") { dist = dist * 1.609344 }\n      if (unit===\"N\") { dist = dist * 0.8684 }\n      return dist;\n    }\n  }\n\n  render() {\n    if (this.state.stations.length) {\n      return (\n        <MuiThemeProvider theme={theme}>\n        <Router>\n          <div>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => <Recent {...props} />} />\n            <Route\n              path=\"/map\"\n              render={(props) => <Map {...props}\n                stations={ this.state.stations }\n                center={ this.state.center }\n                zoom={ this.state.zoom }\n              />} />\n            <Route\n              path=\"/nearest\"\n              render={(props) => <Nearest {...props}\n                stations={ this.state.stations }\n              />} />\n              <BottomNav />\n          </div>\n        </Router>   \n        </MuiThemeProvider>\n      );\n    } else {\n      return (\n      <MuiThemeProvider theme={theme}>\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          <CircularIndeterminate></CircularIndeterminate>\n        </div>\n      </MuiThemeProvider>\n      )\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {  } from 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n// import './assets/material-kit.css';\n\nconst target = document.querySelector('#root');\nrender(\n  <App />,\n  target\n);\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}