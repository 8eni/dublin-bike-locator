{"version":3,"sources":["environment/environment.js","components/BikeStands.js","components/StationDetails.js","components/StationList.js","views/Nearby.js","components/CurrentLocation.js","assets/MapStyles.js","components/Marker.js","views/Map.js","views/Stations.js","components/Header.js","components/BottomNav.js","components/CircularIndeterminate.js","App.js","serviceWorker.js","index.js"],"names":["environment","dbBaseUrl","dbContract","dbApiKey","google_maps_api_key","BikeStands","createTable","bikeStands","availableBikes","table","i","push","react_default","a","createElement","Grid_default","item","xs","key","align","Math","abs","className","concat","_this$props","this","props","container","Component","withStyles","theme","currentStation","backgroundColor","palette","secondary","main800","classes","stationDetails","stationId","number","address","available_bike_stands","available_bikes","distance","root","color","main100","_ref","stations","currentStationId","showCount","map","station","parseInt","components_StationDetails","flexGrow","background","paper","padding","spacing","unit","textAlign","text","grid","borderBottom","gridContainer","width","fontSize","bike","grey","Typography_default","variant","LocalParking_default","DirectionsBike_default","components_StationList","status","components_BikeStands","bike_stands","CurrentLocation","MyLocation_default","MapStyles","styles","featureType","elementType","stylers","saturation","lightness","visibility","weight","Marker","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","viewStation","onClick","display","height","borderRadius","Map","googleMapsApiKey","updateStation","state","setState","val","_this2","center","zoom","lib_default","bootstrapURLKeys","options","defaultZoom","components_CurrentLocation","lat","lng","components_Marker","position","Stations","length","protoTypes","PropTypes","object","isRequired","maxHeight","zIndex","top","main","NearMe_default","BottomNav","value","handleChange","event","BottomNavigation_default","onChange","showLabels","BottomNavigationAction_default","component","Link","to","label","icon","Map_default","ViewList_default","React","bottom","boxShadow","progress","margin","CircularProgress_default","createMuiTheme","typography","useNextVariants","primary","main50","main200","main300","main400","main500","main600","main700","App","getStations","getGeolocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","fetch","response","json","result","appendDistance","getClosest","_this3","toFixed","sort","b","lat1","lon1","lat2","lon2","radlat1","PI","radlat2","theta","radtheta","dist","sin","cos","acos","_this4","BrowserRouter","basename","process","id","components_Header","Route","exact","path","render","views_Nearby","assign","views_Map","views_Stations","components_BottomNav","style","justifyContent","components_CircularIndeterminate","Boolean","window","location","hostname","match","target","document","querySelector","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65b88000.chunk.js","sourcesContent":["export const environment = {\n  dbBaseUrl: 'https://api.jcdecaux.com/vls/v1/',\n  dbContract: 'Dublin',\n  dbApiKey: 'bbbdbe0c576a57bd979453af7228f03a88759b13',\n  google_maps_api_key: 'AIzaSyAveGIhntsi_rM377-o6ILDazuE3NRgrBc'\n};","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nclass BikeStands extends Component {\n\n  createTable = (bikeStands, availableBikes) => {\n    let table = []\n    for (let i = 0; i < bikeStands; i++) {\n      table.push(\n        <Grid item xs={6}\n          key={ i }\n          align={ Math.abs(i % 2) === 1 ? \"left\" : \"right\"}\n          className={`stand ${(availableBikes > i ? 'bike' : 'nobike')}`}>\n          <span>{ i+1 }</span>\n        </Grid>\n        )\n    }\n    return table\n  }\n \n  render() {\n    const { bikeStands, availableBikes } = this.props;\n    return(\n      <Grid container item xs={12} className=\"bike-stand-container\">\n        {this.createTable(bikeStands, availableBikes)}\n      </Grid>\n    )\n  }\n\n}\n\nexport default BikeStands;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  currentStation: {\n    backgroundColor: theme.palette.secondary.main800\n  }\n});\n\nfunction StationDetails(props) {\n  const { classes, stationDetails, stationId } = props;\n  return (\n    <tr className={stationDetails.number === stationId ? classes.currentStation : ''}>\n      <td>{stationDetails.address}</td>\n      <td>{stationDetails.available_bike_stands}</td>\n      <td>{stationDetails.available_bikes}</td>\n      <td>{stationDetails.distance} km</td>\n    </tr>\n  );\n}\n\nStationDetails.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StationDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport StationDetails from '../components/StationDetails';\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.secondary.main100\n  }\n});\n\nconst StationList = ({ classes, stations, currentStationId, showCount }) => \n  (\n    <table className={classes.root}>\n      <thead>\n      <tr>\n        <th align=\"left\">Station</th>\n        <th align=\"left\">Stands</th> \n        <th align=\"left\">Bikes</th> \n        <th align=\"left\">km</th> \n      </tr>\n      </thead>\n      <tbody>\n      { stations.map((station, i) =>\n        (i < parseInt(showCount)) && <StationDetails key={ i } stationDetails={ station } stationId={ currentStationId }/>\n      )}\n      </tbody>\n    </table>\n  )\n\nStationList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(StationList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\nimport BikeStands from '../components/BikeStands'\nimport StationList from '../components/StationList';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    background: '#212121',\n    color: '#fff'\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  grid: {\n    borderBottom: 'solid 1px #424242',\n    color: '#fff'\n  },\n  text: {\n    color: '#fff'\n  },\n  gridContainer: {\n    padding: '10px'\n  },\n  table: {\n    width: '100%',\n    fontSize: '12px'\n  },\n  bike: {\n    color: '#ff3d00'\n  },\n  grey: {\n    color: '#9e9e9e',\n    fontSize: '18px'\n  }\n});\n\nfunction Nearby({ classes, stations, currentStation }) {\n\n  return (\n    <div className={classes.root}>\n      <Grid className={classes.gridContainer} container >\n        \n        <Grid className={classes.grid} item xs={8}>\n          \n          <Grid className={classes.grid} container item xs={12}>\n            <Grid  item xs={6}>\n              <Typography className={classes.text} align='center'>Stands</Typography>\n              <Typography className={classes.text} variant=\"h6\" align='center'><LocalParkingIcon className={classes.bike} />{currentStation.available_bike_stands}</Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography className={classes.text} align='center'>Bikes</Typography>\n              <Typography className={classes.text} variant=\"h6\" align='center'><DirectionsBikeIcon color='primary' />{currentStation.available_bikes}</Typography>\n            </Grid>\n          </Grid>\n\n          <Grid className={classes.grid} container item xs={12}>\n          <Typography className={classes.text} variant=\"caption\">Other stations</Typography>\n            <StationList\n              stations={stations}\n              currentStationId={currentStation.number}\n              showCount='6'></StationList>\n          </Grid>\n\n        </Grid>\n        <Grid className={classes.grid} item xs={4}>\n          <Typography align='center' className={classes.text}>{currentStation.status}</Typography>\n          <Grid container item xs={12}>\n            <BikeStands bikeStands={currentStation.bike_stands} availableBikes={currentStation.available_bikes} />\n          </Grid>\n        </Grid>\n      <Grid className={classes.grid} item xs={12}>\n        <Typography align='center' variant=\"caption\">last updated -  14:30</Typography>\n      </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nNearby.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Nearby);\n","import React from 'react';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\n\nconst CurrentLocation = () => <div className=\"currentLocation\"><MyLocationIcon /></div>\n\nexport default CurrentLocation;","const MapStyles = {\n    styles: [\n      {\n          \"featureType\": \"all\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n              {\n                  \"saturation\": 36\n              },\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 40\n              }\n          ]\n      },\n      {\n          \"featureType\": \"all\",\n          \"elementType\": \"labels.text.stroke\",\n          \"stylers\": [\n              {\n                  \"visibility\": \"on\"\n              },\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 16\n              }\n          ]\n      },\n      {\n          \"featureType\": \"all\",\n          \"elementType\": \"labels.icon\",\n          \"stylers\": [\n              {\n                  \"visibility\": \"off\"\n              }\n          ]\n      },\n      {\n          \"featureType\": \"administrative\",\n          \"elementType\": \"geometry.fill\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 20\n              }\n          ]\n      },\n      {\n          \"featureType\": \"administrative\",\n          \"elementType\": \"geometry.stroke\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 17\n              },\n              {\n                  \"weight\": 1.2\n              }\n          ]\n      },\n      {\n          \"featureType\": \"landscape\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 20\n              }\n          ]\n      },\n      {\n          \"featureType\": \"poi\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 21\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"geometry.fill\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 17\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"geometry.stroke\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 29\n              },\n              {\n                  \"weight\": 0.2\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.arterial\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 18\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.local\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 16\n              }\n          ]\n      },\n      {\n          \"featureType\": \"transit\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 19\n              }\n          ]\n      },\n      {\n          \"featureType\": \"water\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#212121\"\n              },\n              {\n                  \"lightness\": 17\n              }\n          ]\n      }\n  ]\n  };\n  export default MapStyles;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    display: 'block',\n    width: '20px',\n    height: '20px',\n    background: '#64ffda',\n    borderRadius: '20px'\n  }\n})\nclass Marker extends Component {\n\n  constructor(props) {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    return this.props.viewStation(this.props.station)\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root} onClick={ this.handleClick }></div>\n    )\n  }\n}\n\nMarker.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Marker);","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport { environment } from '../environment/environment';\nimport CurrentLocation from '../components/CurrentLocation';\nimport MapStyles from '../assets/MapStyles';  \nimport Marker from '../components/Marker';\n\nclass Map extends Component {\n  constructor(props) {\n    super(props)\n    this.googleMapsApiKey = environment.google_maps_api_key;\n    this.updateStation = this.updateStation.bind(this)\n    this.state = { \n      station: 'station',\n      stations: []\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ station: this.state.stations[0] })\n  }\n\n  updateStation(val) {\n    this.setState({ station: val })\n    this.props.updateStation(val);\n  }\n\n  render() {\n    const { center, zoom, stations } = this.props;\n    return (\n      <div>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: this.googleMapsApiKey }}\n          center={ center }\n          options={ MapStyles }\n          defaultZoom={ zoom }>\n          <CurrentLocation\n            lat={ center.lat }\n            lng={ center.lng } />\n          { stations.map((station, i) =>\n            <Marker\n              key={ i }\n              viewStation={ this.updateStation }\n              lat={ station.position.lat }\n              lng={ station.position.lng }\n              station={ station } />\n          )}\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default Map;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport StationList from '../components/StationList';\n\nconst styles = () => ({\n  root: {\n    padding: '15px'\n  }\n})\nconst Stations = ({ classes, stations, currentStation }) =>\n  <div>\n    <StationList className={classes.root}\n      stations={stations} \n      currentStationId={ currentStation.number } \n      showCount={stations.length} />\n  </div>\n\nStations.protoTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Stations);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport NearMeIcon from '@material-ui/icons/NearMe';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    maxHeight: '65px',\n    padding: '5px',\n    color: '#fff',\n    position: 'fixed',\n    zIndex: 5,\n    width: '100%',\n    top: 0,\n    background: theme.palette.secondary.main,\n    borderBottom: `solid 1px ${theme.palette.secondary.main800}`\n  }\n})\n\nconst Header = ({ currentStation, classes }) => \n  <Grid item xs={12} className={`header ${classes.root}`}>\n    <Typography align='center' variant=\"h5\" color=\"inherit\">{currentStation.address}</Typography>\n    <Typography align='center' variant=\"subtitle1\" color=\"inherit\"><NearMeIcon fontSize=\"inherit\" /> {currentStation.distance} km</Typography>\n  </Grid>\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport MapIcon from '@material-ui/icons/Map';\nimport NearMeIcon from '@material-ui/icons/NearMe';\n\nconst styles = {\n  root: {\n    width: '100%',\n    position: 'fixed',\n    bottom: 0,\n    zIndex: 1,\n    height: '65px',\n    boxShadow: 'rgba(0, 0, 0, 0.3) 0px -1px 4px -1px'\n  },\n};\n\nclass BottomNav extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n      <BottomNavigation\n        value={value}\n        onChange={this.handleChange}\n        showLabels\n        className={classes.root}>\n        <BottomNavigationAction component={Link}\n          to=\"/\"\n          label=\"Near by\"\n          value=\"Near by\"\n          icon={<NearMeIcon />} />\n        <BottomNavigationAction component={Link}\n          to=\"/map\"\n          label=\"map\"\n          value=\"map\"\n          icon={<MapIcon />} />\n        <BottomNavigationAction component={Link}\n          to=\"/stations\"\n          label=\"stations\"\n          value=\"stations\"\n          icon={<ViewListIcon />} />\n      </BottomNavigation>\n    );\n  }\n}\n\nBottomNav.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(BottomNav);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 2\n  },\n});\n\nfunction CircularIndeterminate(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <CircularProgress className={classes.progress} color=\"secondary\" />\n    </div>\n  );\n}\n\nCircularIndeterminate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route  } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './App.css';\n\nimport { environment } from './environment/environment';\nimport Nearby from './views/Nearby';\nimport Map from './views/Map';\nimport Stations from './views/Stations';\nimport Header from './components/Header';\nimport BottomNav from './components/BottomNav';\nimport CircularIndeterminate from './components/CircularIndeterminate';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      main: '#64ffda',\n    },\n    secondary: {\n      main: '#212121',\n      main50: '#fafafa',\n      main100: '#f5f5f5',\n      main200: '#eeeeee',\n      main300: '#e0e0e0',\n      main400: '#bdbdbd',\n      main500: '#9e9e9e',\n      main600: '#757575',\n      main700: '#616161',\n      main800: '#424242'\n    },\n  },\n});\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.getStations = this.getStations.bind(this)\n    this.updateStation = this.updateStation.bind(this)\n    this.state = {\n      center: { }, \n      zoom: 16,\n      stations: [],\n      station: ''\n    }\n  }\n\n  componentDidMount() {\n    this.getGeolocation();\n  }\n\n  getGeolocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => {\n        this.getStations(\n          pos.coords.latitude, pos.coords.longitude\n          // 53.3442, -6.2400\n        )\n        this.setState({\n          center: {\n            lat: pos.coords.latitude,\n            lng: pos.coords.longitude\n            // lat: 53.3442 , lng: -6.2400\n          }\n        });\n      });\n    }\n  }\n\n  updateStation(val) {\n    this.setState({ station: val })\n  }\n\n  async getStations(lat, lng) {\n    const { dbBaseUrl, dbContract, dbApiKey} = environment;\n    const response = await fetch(`${dbBaseUrl}stations?contract=${dbContract}&apiKey=${dbApiKey}`)\n    const json = await response.json();\n    const result = this.appendDistance(json, lat, lng);\n    this.setState({ stations: this.getClosest(result) });\n  }\n\n  appendDistance(response, lat, lng) {\n    const result = response.map(item => {\n      item.distance = this.distance(lat,lng, item.position.lat, item.position.lng, 'K').toFixed(2);\n      return item;\n    })\n    return result;\n  }\n\n  getClosest(stations) {\n    const result = stations.sort((a,b) => (a.distance > b.distance) ? 1 : ((b.distance > a.distance) ? -1 : 0));\n    this.setState({ station: result[0]} )\n    return result;\n  }\n\n  distance(lat1, lon1, lat2, lon2, unit) {\n    if ((lat1 === lat2) && (lon1 === lon2)) {\n      return 0;\n    }\n    else {\n      var radlat1 = Math.PI * lat1/180;\n      var radlat2 = Math.PI * lat2/180;\n      var theta = lon1-lon2;\n      var radtheta = Math.PI * theta/180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      if (dist > 1) {\n        dist = 1;\n      }\n      dist = Math.acos(dist);\n      dist = dist * 180/Math.PI;\n      dist = dist * 60 * 1.1515;\n      if (unit===\"K\") { dist = dist * 1.609344 }\n      if (unit===\"N\") { dist = dist * 0.8684 }\n      return dist;\n    }\n  }\n\n  render() {\n    if (this.state.stations.length) {\n      return (\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <div id=\"wrapper\">\n          <Header currentStation={ this.state.station } />\n          <div className='main'>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => <Nearby {...props}\n                stations={ this.state.stations }\n                currentStation={ this.state.station }\n              />} />\n            <Route\n              path=\"/map\"\n              render={(props) => <Map {...props}\n                updateStation={ this.updateStation }\n                stations={ this.state.stations }\n                center={ this.state.center }\n                zoom={ this.state.zoom }\n              />} />\n            <Route\n              path=\"/stations\"\n              render={(props) => <Stations {...props}\n                stations={ this.state.stations }\n                currentStation={ this.state.station }\n              />} />\n\n              </div>\n            <BottomNav />\n          </div>\n        </BrowserRouter>   \n        </MuiThemeProvider>\n      );\n    } else {\n      return (\n      <MuiThemeProvider theme={theme}>\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          <CircularIndeterminate></CircularIndeterminate>\n        </div>\n      </MuiThemeProvider>\n      )\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {  } from 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n// import './assets/material-kit.css';\n\nconst target = document.querySelector('#root');\nrender(\n  <App />,\n  target\n);\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}