{"version":3,"sources":["environment/environment.js","components/CurrentLocation.js","assets/MapStyles.js","components/Marker.js","views/Map.js","components/Header.js","components/CircularIndeterminate.js","App.js","serviceWorker.js","index.js"],"names":["environment","dbBaseUrl","dbContract","dbApiKey","google_maps_api_key","CurrentLocation","react_default","a","createElement","className","MyLocation_default","MapStyles","styles","featureType","elementType","stylers","saturation","color","lightness","visibility","weight","Marker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","active","viewStation","station","_this$props","classes","number","concat","root","onClick","Component","withStyles","theme","display","width","height","background","borderRadius","lineHeight","textAlign","margin","Map","googleMapsApiKey","updateStation","state","stations","setState","val","_this2","center","zoom","isBike","lib_default","bootstrapURLKeys","key","options","defaultZoom","components_CurrentLocation","lat","lng","map","i","components_Marker","available_bikes","available_bike_stands","position","useStyles","makeStyles","minHeight","zIndex","top","title","flexGrow","toolbar","toggle","palette","secondary","main800","&.Mui-selected","defineProperty","primary","main","&:hover","ButtonAppBar","_ref","currentStation","_React$useState","React","useState","_React$useState2","slicedToArray","alignment","setAlignment","children","ToggleButton","value","DirectionsBike_default","LocalParking_default","AppBar","Toolbar","Typography","variant","name","NearMe_default","distance","ToggleButtonGroup","size","exclusive","onChange","event","newAlignment","console","log","CircularProgress","progress","createMuiTheme","typography","useNextVariants","main50","main100","main200","main300","main400","main500","main600","main700","App","getStations","getGeolocation","setInterval","_this3","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","watchGeoLocation","_this4","watchPosition","setActiveStation","s","fetch","response","json","result","appendDistance","getClosest","_this5","item","toFixed","sort","b","lat1","lon1","lat2","lon2","unit","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","_this6","length","MuiThemeProvider","react_router_dom","basename","process","id","react_router","path","render","views_Map","assign","style","justifyContent","components_CircularIndeterminate","Boolean","window","location","hostname","match","target","document","querySelector","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.927e7163.chunk.js","sourcesContent":["export const environment = {\n  dbBaseUrl: 'https://api.jcdecaux.com/vls/v1/',\n  dbContract: 'Dublin',\n  dbApiKey: 'bbbdbe0c576a57bd979453af7228f03a88759b13',\n  google_maps_api_key: 'AIzaSyATI7fhyrRNch0Bu_xvVzAPsaJrDUZs73g'\n};","import React from 'react';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\n\nconst CurrentLocation = () => <div className=\"currentLocation\"><MyLocationIcon /></div>\n\nexport default CurrentLocation;","const MapStyles = {\n    styles: [\n      {\n          \"featureType\": \"all\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n              {\n                  \"saturation\": 36\n              },\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 40\n              }\n          ]\n      },\n      {\n          \"featureType\": \"all\",\n          \"elementType\": \"labels.text.stroke\",\n          \"stylers\": [\n              {\n                  \"visibility\": \"on\"\n              },\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 16\n              }\n          ]\n      },\n      {\n          \"featureType\": \"all\",\n          \"elementType\": \"labels.icon\",\n          \"stylers\": [\n              {\n                  \"visibility\": \"off\"\n              }\n          ]\n      },\n      {\n          \"featureType\": \"administrative\",\n          \"elementType\": \"geometry.fill\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 20\n              }\n          ]\n      },\n      {\n          \"featureType\": \"administrative\",\n          \"elementType\": \"geometry.stroke\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 17\n              },\n              {\n                  \"weight\": 1.2\n              }\n          ]\n      },\n      {\n          \"featureType\": \"landscape\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 20\n              }\n          ]\n      },\n      {\n          \"featureType\": \"poi\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 21\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"geometry.fill\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 17\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"geometry.stroke\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 29\n              },\n              {\n                  \"weight\": 0.2\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.arterial\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 18\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.local\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 16\n              }\n          ]\n      },\n      {\n          \"featureType\": \"transit\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#000000\"\n              },\n              {\n                  \"lightness\": 19\n              }\n          ]\n      },\n      {\n          \"featureType\": \"water\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n              {\n                  \"color\": \"#212121\"\n              },\n              {\n                  \"lightness\": 17\n              }\n          ]\n      }\n  ]\n  };\n  export default MapStyles;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    display: 'block',\n    width: '20px',\n    height: '20px',\n    background: '#64ffda',\n    borderRadius: '20px',\n    lineHeight: '20px',\n    textAlign: 'center',\n    margin: '-10px 0 0 -10px'\n  },\n  active: {\n    background: 'red'\n  }\n})\nclass Marker extends Component {\n\n  constructor(props) {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.active = true;\n    return this.props.viewStation(this.props.station)\n  }\n\n  render() {\n    const { classes, station, number } = this.props;\n    return (\n      <div className={`${classes.root} ${station.active ? classes.active : ''}`} onClick={ this.handleClick }>{number}</div>\n    )\n  }\n}\n\nMarker.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Marker);","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport { environment } from '../environment/environment';\nimport CurrentLocation from '../components/CurrentLocation';\nimport MapStyles from '../assets/MapStyles';  \nimport Marker from '../components/Marker';\n\nclass Map extends Component {\n  constructor(props) {\n    super(props)\n    this.googleMapsApiKey = environment.google_maps_api_key;\n    this.updateStation = this.updateStation.bind(this)\n    this.state = { \n      station: 'station',\n      stations: []\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ station: this.state.stations[0] })\n  }\n\n  updateStation(val) {\n    this.setState({ station: val })\n    this.props.updateStation(val);\n  }\n\n  render() {\n    const { center, zoom, stations, isBike } = this.props;\n    return (\n      <div>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: this.googleMapsApiKey }}\n          center={ center }\n          options={ MapStyles }\n          defaultZoom={ zoom }>\n          <CurrentLocation\n            lat={ center.lat }\n            lng={ center.lng } />\n          { stations.map((station, i) =>\n            <Marker\n              key={ i }\n              number={ isBike ? station.available_bikes : station.available_bike_stands }\n              viewStation={ this.updateStation }\n              lat={ station.position.lat }\n              lng={ station.position.lng }\n              station={ station } />\n          )}\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default Map;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\nimport NearMeIcon from '@material-ui/icons/NearMe';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '64px',\n    position: 'fixed',\n    zIndex: 5,\n    width: '100%',\n    top: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    minHeight: '64px',\n  },\n  toggle: {\n    background: theme.palette.secondary.main800,\n    '&.Mui-selected': {\n      background: theme.palette.primary.main,\n      '&:hover': {\n        background: theme.palette.primary.main,\n      },\n    '&:hover': {\n      background: theme.palette.secondary.main800,\n    }\n    }\n  }\n}));\n\nexport default function ButtonAppBar({ currentStation }) {\n  const classes = useStyles();\n  const [alignment, setAlignment] = React.useState('bike');\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n    console.log('align ', alignment)\n  };\n  const children = [\n    <ToggleButton className={classes.toggle} key={1} value=\"bike\">\n      <DirectionsBikeIcon />\n    </ToggleButton>,\n    <ToggleButton className={classes.toggle} key={2} value=\"park\">\n      <LocalParkingIcon />\n    </ToggleButton>,\n  ];\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\" className={classes.title}>\n            { currentStation.name } <NearMeIcon />{currentStation.distance}km\n          </Typography>\n          <ToggleButtonGroup size=\"small\" value={alignment} exclusive onChange={handleChange}>\n                {children}\n              </ToggleButtonGroup>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  // progress: {\n  //   margin: theme.spacing.unit * 2\n  // },\n});\n\nfunction CircularIndeterminate(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <CircularProgress className={classes.progress} color=\"secondary\" />\n    </div>\n  );\n}\n\nCircularIndeterminate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route  } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './App.css';\n\nimport { environment } from './environment/environment';\nimport Map from './views/Map';\nimport Header from './components/Header';\nimport CircularIndeterminate from './components/CircularIndeterminate';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      main: '#64ffda',\n    },\n    secondary: {\n      main: '#212121',\n      main50: '#fafafa',\n      main100: '#f5f5f5',\n      main200: '#eeeeee',\n      main300: '#e0e0e0',\n      main400: '#bdbdbd',\n      main500: '#9e9e9e',\n      main600: '#757575',\n      main700: '#616161',\n      main800: '#424242'\n    },\n  },\n});\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.getStations = this.getStations.bind(this)\n    this.updateStation = this.updateStation.bind(this)\n    this.state = {\n      center: { }, \n      zoom: 16,\n      stations: [],\n      station: ''\n    }\n    this.isBike = true; // Add Pre-screen to decide this state\n  }\n\n  componentDidMount() {\n    this.getGeolocation();\n    setInterval(() => {\n      console.log('boom!');\n      \n      this.getStations(this.state.center.lat, this.state.center.lng)\n    }, 60000)\n  }\n\n  getGeolocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => {\n        this.setState({\n          center: {\n            lat: pos.coords.latitude,\n            lng: pos.coords.longitude\n          }\n        }, () => this.getStations(this.state.center.lat, this.state.center.lng));\n      });\n      this.watchGeoLocation();\n    } else {\n      // Set 'center' to city center\n      this.setState({\n        center: {\n          lat: 53.347316, lng: -6.259184\n        }\n      }, () => this.getStations(this.state.center.lat, this.state.center.lng));\n      \n    }\n  }\n\n  watchGeoLocation() {\n    navigator.geolocation.watchPosition(pos => {\n      this.setState({\n        center: {\n          lat: pos.coords.latitude,\n          lng: pos.coords.longitude\n        }\n      });\n    })\n  }\n\n  updateStation(val) {\n    const setActiveStation = this.state.stations.map(s => (val.number === s.number) ? (s.active = true, s) : (s.active = false, s))\n    this.setState({ \n      station: val,\n      stations: setActiveStation\n    })\n  }\n\n  async getStations(lat, lng) {\n    const { dbBaseUrl, dbContract, dbApiKey} = environment;\n    const response = await fetch(`${dbBaseUrl}stations?contract=${dbContract}&apiKey=${dbApiKey}`)\n    const json = await response.json();\n    const result = this.appendDistance(json, lat, lng);\n    this.setState({ stations: this.getClosest(result) });\n  }\n\n  appendDistance(response, lat, lng) {\n    const result = response.map(item => {\n      item.distance = this.distance(lat,lng, item.position.lat, item.position.lng, 'K').toFixed(2);\n      return item;\n    })\n    return result;\n  }\n\n  getClosest(stations) {\n    const result = stations.sort((a,b) => (a.distance > b.distance) ? 1 : ((b.distance > a.distance) ? -1 : 0));\n    result[0].active = true;\n    this.setState({ station: result[0] } )\n    return result;\n  }\n\n  distance(lat1, lon1, lat2, lon2, unit) {\n    if ((lat1 === lat2) && (lon1 === lon2)) {\n      return 0;\n    }\n    else {\n      var radlat1 = Math.PI * lat1/180;\n      var radlat2 = Math.PI * lat2/180;\n      var theta = lon1-lon2;\n      var radtheta = Math.PI * theta/180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      if (dist > 1) {\n        dist = 1;\n      }\n      dist = Math.acos(dist);\n      dist = dist * 180/Math.PI;\n      dist = dist * 60 * 1.1515;\n      if (unit===\"K\") { dist = dist * 1.609344 }\n      if (unit===\"N\") { dist = dist * 0.8684 }\n      return dist;\n    }\n  }\n\n  render() {\n    if (this.state.stations.length) {\n      return (\n        <MuiThemeProvider theme={theme}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <div id=\"wrapper\">\n          <Header currentStation={ this.state.station } />\n          <div className='main'>\n            <Route\n              path=\"/\"\n              render={(props) => <Map {...props}\n                isBike={ this.isBike }\n                updateStation={ this.updateStation }\n                stations={ this.state.stations }\n                center={ this.state.center }\n                zoom={ this.state.zoom }\n              />} />\n              </div>\n          </div>\n        </BrowserRouter>   \n        </MuiThemeProvider>\n      );\n    } else {\n      return (\n      <MuiThemeProvider theme={theme}>\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          <CircularIndeterminate></CircularIndeterminate>\n        </div>\n      </MuiThemeProvider>\n      )\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {  } from 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n// import './assets/material-kit.css';\n\nconst target = document.querySelector('#root');\n\nrender(\n  <App />,\n  target\n);\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}